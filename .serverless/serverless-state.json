{
  "service": {
    "service": "snap-omni-project-service",
    "serviceObject": {
      "name": "snap-omni-project-service"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-2",
      "iam": {
        "role": "arn:aws:iam::319643186591:role/omnichannel-lambda-access-desa-role"
      },
      "deploymentBucket": "omnichannel-dev-lambda",
      "apiGateway": {
        "restApiId": "qu2cqxv2kj",
        "restApiRootResourceId": "zeyuwoe3o3"
      },
      "stage": "dev",
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "omnichannel-dev-lambda",
        "serverSideEncryption": "AES256"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "MainLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/snap-omni-project-service-dev-main"
            }
          },
          "MainLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "omnichannel-dev-lambda",
                "S3Key": "serverless/snap-omni-project-service/dev/1695878343378-2023-09-28T05:19:03.378Z/snap-omni-project-service.zip"
              },
              "Handler": "dist/serverless.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "snap-omni-project-service-dev-main",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::319643186591:role/omnichannel-lambda-access-desa-role"
            },
            "DependsOn": [
              "MainLogGroup"
            ]
          },
          "MainLambdaVersionhIIjDTJStY8JAmH3R3jBmJ1rWfdzigyIbJSNH5cQtU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MainLambdaFunction"
              },
              "CodeSha256": "As3Le8Kmv9ThDJ+TS+N9OFdDF63fxJ/33nhMQLl3ntI="
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": "zeyuwoe3o3",
              "PathPart": "{proxy+}",
              "RestApiId": "qu2cqxv2kj"
            }
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": "qu2cqxv2kj",
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MainLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "MainLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1695878333830": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": "qu2cqxv2kj",
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "MainLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MainLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "qu2cqxv2kj",
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "omnichannel-dev-lambda",
            "Export": {
              "Name": "sls-snap-omni-project-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "MainLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MainLambdaVersionhIIjDTJStY8JAmH3R3jBmJ1rWfdzigyIbJSNH5cQtU"
            },
            "Export": {
              "Name": "sls-snap-omni-project-service-dev-MainLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  "qu2cqxv2kj",
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-snap-omni-project-service-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stage": "dev",
      "settings": {
        "dev": {
          "region": "us-east-2"
        },
        "prod": {
          "region": "us-east-1"
        }
      }
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "main": {
        "handler": "dist/serverless.handler",
        "events": [
          {
            "http": {
              "method": "any",
              "path": "{proxy+}",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "snap-omni-project-service-dev-main",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "MainLambdaVersionhIIjDTJStY8JAmH3R3jBmJ1rWfdzigyIbJSNH5cQtU"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "snap-omni-project-service",
      "frameworkVersion": "3",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/elbinflores/Dev/testing/project-service/.serverless/snap-omni-project-service.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/snap-omni-project-service/dev/1695878343378-2023-09-28T05:19:03.378Z",
    "artifact": "snap-omni-project-service.zip"
  }
}